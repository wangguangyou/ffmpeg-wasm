{"version":3,"sources":["util.js","App.js","serviceWorker.js","index.js"],"names":["downlod","url","filename","link","document","createElement","href","download","click","URL","revokeObjectURL","audioTypeList","videoTypeList","actions","value","label","App","inputFileEl","useRef","setToast","useToasts","useState","loading","setLoading","file","setFile","type","setType","audioType","setAudioType","more","setMore","modalVisible","setModalVisible","audioModalVisible","setAudioModalVisible","getType","exec","ffmpeg","createFFmpeg","corePath","log","doTranscode","a","setTimeout","inName","outName","Date","now","load","fetchFile","FS","run","data","createObjectURL","Blob","buffer","onChange","event","files","target","console","className","loaderColor","visible","Title","Subtitle","Content","Group","val","useRow","slice","length","map","key","onClick","style","marginLeft","shadow","iconRight","auto","scale","Action","passive","error","text","ref","display","accept","caption","name","item","current","action","Boolean","window","location","hostname","match","VConsole","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.ba35c98b.chunk.js","sourcesContent":["export const downlod = (url,filename) =>{\n  const link = document.createElement('a')\n  link.href = url\n  link.download =filename|| true\n  link.click()\n  URL.revokeObjectURL(url)\n} ","import React, { useState } from \"react\";\nimport Loading from 'react-fullscreen-loading';\nimport { createFFmpeg, fetchFile } from \"@ffmpeg/ffmpeg\";\nimport { Modal, Radio, Button, Display,useToasts } from \"@geist-ui/core\";\nimport { MoreHorizontal } from \"@geist-ui/icons\";\nimport { downlod } from \"./util\";\nimport \"./App.css\";\nimport { useRef } from \"react\";\nconst audioTypeList = ['mp3','acc','flac','ac-3','vorbis','opus']\nconst videoTypeList = [\n  \"mp4\",\n  \"flv\",\n  \"avi\",\n  \"mov\",\n  \"wmv\",\n  \"m4v\",\n  \"f4v\",\n  \"3gp\",\n  \"ts\",\n  \"webm\",\n];\nconst actions = [\n  {\n    value: -1,\n    label: \"选择其他视频\",\n  },\n  {\n    value: 0,\n    label: \"格式转换\",\n  },\n  {\n    value: 1,\n    label: \"提取音频\",\n  },\n];\n\nfunction App() {\n  const inputFileEl = useRef(null);\n  const { setToast } = useToasts()\n  const [loading, setLoading] = useState(false);\n  const [file, setFile] = useState();\n  const [type, setType] = useState(videoTypeList[0]);\n  const [audioType, setAudioType] = useState(audioTypeList[0]);\n  const [more, setMore] = useState(false);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [audioModalVisible, setAudioModalVisible] = useState(false);\n\n  const getType = (file) => {\n    return /^video\\/(.+)$/.exec(file.type)[1];\n  };\n\n  const ffmpeg = createFFmpeg({\n    corePath: \"./ffmpeg-core.js\",\n    log: true,\n  });\n  const doTranscode = async () => {\n    setModalVisible(false);\n    setLoading(true)\n    setTimeout(async () => {\n      let inName = `test.${getType(file)}`;\n      let outName = `${Date.now()}.${type}`;\n      await ffmpeg.load();\n      ffmpeg.FS(\"writeFile\", inName, await fetchFile(file));\n      await ffmpeg.run(\"-i\", inName, outName);\n      const data = ffmpeg.FS(\"readFile\", outName);\n      let url = URL.createObjectURL(\n        new Blob([data.buffer], { type: `video/${type}` })\n      );\n      downlod(url, outName);\n      setLoading(false)\n    }, 0);\n  };\n  const getAudio = ()=>{\n    setAudioModalVisible(false);\n    setLoading(true)\n    setTimeout(async () => {\n      let inName = `test.${getType(file)}`;\n      let outName = `${Date.now()}.${audioType}`;\n      await ffmpeg.load();\n      ffmpeg.FS(\"writeFile\", inName, await fetchFile(file));\n      await ffmpeg.run(\"-i\", inName, '-vn',outName);\n      try {\n        const data = ffmpeg.FS(\"readFile\", outName);\n        console.log(data)\n        let url = URL.createObjectURL(\n          new Blob([data.buffer], { type: `audio/${type}` })\n        );\n        downlod(url, outName);\n      } catch (error) {\n        setToast({text:'提取失败,视频可能没有音轨'})\n      }\n      setLoading(false)\n\n    }, 0);\n  }\n  const action = (type) => {\n    if (type === -1) {\n      return inputFileEl.current?.click();\n    }\n    if (type === 0) {\n      return setModalVisible(true);\n    }\n    if (type === 1) {\n      return setAudioModalVisible(true);\n    }\n  };\n  const onChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    console.log(files[0]);\n    setFile(files[0]);\n  };\n  return (\n    <div className=\"App\">\n      <Loading loading={loading} loaderColor=\"rgba(0,112,243,.6)\" />\n      <Modal visible={modalVisible}>\n        <Modal.Title>格式转换</Modal.Title>\n        <Modal.Subtitle>请选择要转换的视频格式</Modal.Subtitle>\n        <Modal.Content>\n          <Radio.Group\n            value={type}\n            onChange={(val) => setType(val)}\n            useRow={!more}\n          >\n            {videoTypeList\n              .slice(0, more ? videoTypeList.length : 4)\n              .map((type) => (\n                <Radio key={type} value={type}>\n                  {type}\n                </Radio>\n              ))}\n            {!more && (\n              <Button\n                onClick={() => setMore(true)}\n                style={{ marginLeft: \"20px\" }}\n                shadow\n                iconRight={<MoreHorizontal />}\n                auto\n                scale={1 / 3}\n              />\n            )}\n          </Radio.Group>\n        </Modal.Content>\n        <Modal.Action passive onClick={() => setModalVisible(false)}>\n          取消\n        </Modal.Action>\n        <Modal.Action onClick={() => doTranscode()}>确认</Modal.Action>\n      </Modal>\n\n      <Modal visible={audioModalVisible}>\n        <Modal.Title>提取音频</Modal.Title>\n        <Modal.Subtitle>请选择音频格式</Modal.Subtitle>\n        <Modal.Content>\n          <Radio.Group\n            value={audioType}\n            onChange={(val) => setAudioType(val)}\n            useRow={!more}\n          >\n            {audioTypeList\n              .slice(0, more ? audioTypeList.length : 3)\n              .map((type) => (\n                <Radio key={type} value={type}>\n                  {type}\n                </Radio>\n              ))}\n            {!more && (\n              <Button\n                onClick={() => setMore(true)}\n                style={{ marginLeft: \"20px\" }}\n                shadow\n                iconRight={<MoreHorizontal />}\n                auto\n                scale={1 / 3}\n              />\n            )}\n          </Radio.Group>\n        </Modal.Content>\n        <Modal.Action passive onClick={() => setAudioModalVisible(false)}>\n          取消\n        </Modal.Action>\n        <Modal.Action onClick={() => getAudio()}>确认</Modal.Action>\n      </Modal>\n      <input\n              ref={inputFileEl}\n              onChange={onChange}\n              style={{display:'none'}}\n              accept=\"video/*\"\n              type=\"file\"\n              className=\"App-main-upload\"\n            />\n      <main className=\"App-main\">\n        {file ? (\n          <div className=\"App-main-content\">\n            <Display caption={file.name} shadow>\n              <div className=\"App-main-actions\">\n                {actions.map((item) => (\n                  <Button\n                    key={item.value}\n                    className=\"App-main-content-button\"\n                    onClick={() => action(item.value)}\n                    shadow\n                    type={item.value<0?'abort':'secondary'}\n                  >\n                    {item.label}\n                  </Button>\n                ))}\n              </div>\n            </Display>\n          </div>\n        ) : (\n          <>\n            <div className=\"App-main-info\">点击上传视频</div>\n            <input\n              onChange={onChange}\n              accept=\"video/*\"\n              type=\"file\"\n              className=\"App-main-upload\"\n            />\n          </>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { GeistProvider, CssBaseline } from '@geist-ui/core'\nimport VConsole from 'vconsole';\n new VConsole();\nReactDOM.render(\n  <React.StrictMode>\n    <GeistProvider>\n      <CssBaseline/>\n      <App />\n    </GeistProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}